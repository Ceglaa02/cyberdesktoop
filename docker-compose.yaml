services:
  php:
    container_name: php
    build:
      context: ./docker/php/
      dockerfile: ./Dockerfile
    volumes:
      - ./app/backend:/var/www/html
    working_dir: /var/www/html
    networks:
      - cyber

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./docker/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./app/backend:/var/www/html
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - php
    networks:
      - cyber

  vue:
    container_name: vue
    build:
      context: ./
      dockerfile: ./docker/vue/Dockerfile
    volumes:
      - ./app/frontend:/app
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    networks:
      - cyber

  mysql:
    image: mysql:latest
    container_name: mysql
    restart: unless-stopped
    env_file:
      - ./app/backend/.env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cyber

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - cyber

networks:
  cyber:
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  mysql_data: